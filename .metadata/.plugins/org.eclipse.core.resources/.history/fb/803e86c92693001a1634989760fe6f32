package io.anuj.springboot.courses;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class CourseService {

	@Autowired
	private CourseRepository courseRepository;
	private List<Course> topics = new ArrayList<>(Arrays.asList(

			new Course("Spring", "Spring Framework", "Spring framework description"),
			new Course("java", "core java", "Core Java description"),
			new Course("JavaScript", "JavaScript", "JavaScript description")
			
			));
	
	public List<Course> getAllCourses(){
//		return topics;
		List<Course> topics = new ArrayList<>();
		courseRepository.findAll().forEach(topics::add);
		return topics;
	}
	
	public Course getCourse(String id) {
//		return topics.stream().filter(t->t.getId().equals(id)).findFirst().get();
		return courseRepository.findById(id).orElseGet(Course::new);
	}

	public void addCourse(Course course) {
//		topics.add(topic);
		courseRepository.save(course);
		
	}

	public void updateCourse(Course course) {
//		for(int i = 0; i < topics.size(); i++) {
//			Topic temp = topics.get(i);
//			if(temp.getId().equals(id)) {
//				topics.set(i, topic);
//				return;
//			}
//		}
		
		courseRepository.save(course);
	}

	public void deleteCourse(String id) {
//		topics.removeIf(t->t.getId().equals(id));
//		return;
		
		courseRepository.deleteById(id);
	}
}

